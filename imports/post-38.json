{
    "comments": [],
    "tags": ["javascript", "web-dev"],
    "title": "Bipolar: Objects vs. Primatives",
    "html": "<div class=\"javascript\" style=\"text-align: left\">\nBoolean<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span>\n=== <span style=\"color: #003366; font-weight: bold;\">false</span><br/>\n<span style=\"color: #003366; font-weight: bold;\">new</span>\nBoolean<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span> ==\n<span style=\"color: #003366; font-weight: bold;\">false</span><br/>\n<span style=\"color: #003366; font-weight: bold;\">new</span>\nBoolean<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span>.<span style=\"color: #006600;\">valueOf</span><span style=\"color: #66cc66;\">(</span><span style=\"color: #66cc66;\">)</span>\n=== <span style=\"color: #003366; font-weight: bold;\">false</span><br/>\n!<span style=\"color: #003366; font-weight: bold;\">new</span>\nBoolean<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span> ==\n<span style=\"color: #003366; font-weight: bold;\">false</span><br/>\nNumber<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span>\n=== <span style=\"color: #CC0000;\">0</span><br/>\n<span style=\"color: #003366; font-weight: bold;\">new</span>\nNumber<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span> ==\n<span style=\"color: #CC0000;\">0</span><br/>\n<span style=\"color: #003366; font-weight: bold;\">new</span>\nNumber<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span>.<span style=\"color: #006600;\">valueOf</span><span style=\"color: #66cc66;\">(</span><span style=\"color: #66cc66;\">)</span>\n=== <span style=\"color: #CC0000;\">0</span><br/>\n!<span style=\"color: #003366; font-weight: bold;\">new</span>\nNumber<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span> ==\n<span style=\"color: #CC0000;\">0</span></div>\n<p>After my initial startle, I remembered that objects are always\ntruish in JavaScript. So an object that has a meaning of false is\nstill truish. Below is the same set of statements with\ncomments:</p>\n<div class=\"javascript\" style=\"text-align: left\"><span style=\"color: #009900; font-style: italic;\">// cast as boolean</span><br/>\nBoolean<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span>\n=== <span style=\"color: #003366; font-weight: bold;\">false</span><br/>\n<span style=\"color: #009900; font-style: italic;\">// a new object\nwith value of false</span><br/>\n<span style=\"color: #003366; font-weight: bold;\">new</span>\nBoolean<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span>\n!== <span style=\"color: #003366; font-weight: bold;\">false</span><br/>\n<span style=\"color: #003366; font-weight: bold;\">new</span>\nBoolean<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span> ==\n<span style=\"color: #003366; font-weight: bold;\">false</span><br/>\n!<span style=\"color: #003366; font-weight: bold;\">new</span>\nBoolean<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span> ==\n<span style=\"color: #003366; font-weight: bold;\">false</span><br/>\n<span style=\"color: #009900; font-style: italic;\">// get the\nprimative value of the object</span><br/>\n<span style=\"color: #003366; font-weight: bold;\">new</span>\nBoolean<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span>.<span style=\"color: #006600;\">valueOf</span><span style=\"color: #66cc66;\">(</span><span style=\"color: #66cc66;\">)</span>\n=== <span style=\"color: #003366; font-weight: bold;\">false</span><br/>\n<span style=\"color: #009900; font-style: italic;\">// cast as\nnumber</span><br/>\nNumber<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span>\n=== <span style=\"color: #CC0000;\">0</span><br/>\n<span style=\"color: #009900; font-style: italic;\">// a new number\nwith a value of 0</span><br/>\n<span style=\"color: #003366; font-weight: bold;\">new</span>\nNumber<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span>\n!== <span style=\"color: #CC0000;\">0</span><br/>\n<span style=\"color: #003366; font-weight: bold;\">new</span>\nNumber<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span> ==\n<span style=\"color: #CC0000;\">0</span><br/>\n!<span style=\"color: #003366; font-weight: bold;\">new</span>\nNumber<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span> ==\n<span style=\"color: #CC0000;\">0</span><br/>\n<span style=\"color: #009900; font-style: italic;\">// get the\nprimative value of the object</span><br/>\n<span style=\"color: #003366; font-weight: bold;\">new</span>\nNumber<span style=\"color: #66cc66;\">(</span><span style=\"color: #CC0000;\">0</span><span style=\"color: #66cc66;\">)</span>.<span style=\"color: #006600;\">valueOf</span><span style=\"color: #66cc66;\">(</span><span style=\"color: #66cc66;\">)</span>\n=== <span style=\"color: #CC0000;\">0</span></div>\n<p>So I ended up with the following functions:</p>\n<div class=\"javascript\" style=\"text-align: left\"><span style=\"color: #003366; font-weight: bold;\">function</span>\nisFalsy<span style=\"color: #66cc66;\">(</span>o<span style=\"color: #66cc66;\">)</span> <span style=\"color: #66cc66;\">{</span><br/>\n  <span style=\"color: #000066; font-weight: bold;\">return</span> <span style=\"color: #66cc66;\">(</span>o &amp;&amp; o.<span style=\"color: #006600;\">valueOf</span> ? !o.<span style=\"color: #006600;\">valueOf</span><span style=\"color: #66cc66;\">(</span><span style=\"color: #66cc66;\">)</span> :\n!o<span style=\"color: #66cc66;\">)</span>;<br/>\n<span style=\"color: #66cc66;\">}</span><br/>\n<br/>\n<span style=\"color: #003366; font-weight: bold;\">function</span>\nisTruish<span style=\"color: #66cc66;\">(</span>o<span style=\"color: #66cc66;\">)</span> <span style=\"color: #66cc66;\">{</span><br/>\n  <span style=\"color: #000066; font-weight: bold;\">return</span> <span style=\"color: #66cc66;\">(</span>o &amp;&amp; o.<span style=\"color: #006600;\">valueOf</span> ? !!o.<span style=\"color: #006600;\">valueOf</span><span style=\"color: #66cc66;\">(</span><span style=\"color: #66cc66;\">)</span> :\n!!o<span style=\"color: #66cc66;\">)</span>;<br/>\n<span style=\"color: #66cc66;\">}</span></div>\n<p>Still, it is fun to say that there is a situation where\n\"something == false\" and \"!something == false\".</p>",
    "timestamp": 1248760800000,
    "slug": "bipolar-objects-vs-primatives",
    "nid": 38
}