{
    "comments": [],
    "tags": ["css", "web-dev"],
    "title": "CSS Conditional Rules: Exciting and Scary",
    "html": "<p>This month the W3C came out with a brand new working draft for\nCSS Conditional Rules (<a target=\"_blank\" href=\"http://www.w3.org/TR/css3-conditional/\">W3C Draft</a>).</p>\n<p>Conditional rules are basically @-rules that apply CSS only when\ncertain conditions are met. The most powerful is the <span class=\"geshifilter\"><code class=\"text geshifilter-text\">@supports</code></span> condition. You\nmight be able to guess how it works by looking at the example\nbelow.</p>\n<div class=\"geshifilter\">\n<pre class=\"css geshifilter-css\">\n<span class=\"re0\">#nav</span> <span class=\"br0\">{</span>\n        <span class=\"kw1\">background-color</span><span class=\"sy0\">:</span> <span class=\"re0\">#aaa</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">color</span><span class=\"sy0\">:</span> <span class=\"re0\">#fff</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span>\n<span class=\"co1\">@supports ( text-shadow: -1px -1px 0 #000 ) {</span>\n        <span class=\"re0\">#nav</span> <span class=\"br0\">{</span>\n                <span class=\"kw1\">text-shadow</span><span class=\"sy0\">:</span> <span class=\"re3\">-1px</span> <span class=\"re3\">-1px</span> <span class=\"nu0\">0</span> <span class=\"re0\">#000</span><span class=\"sy0\">;</span>\n                <span class=\"kw1\">color</span><span class=\"sy0\">:</span> <span class=\"re0\">#ccc</span><span class=\"sy0\">;</span>\n        <span class=\"br0\">}</span>\n<span class=\"br0\">}</span>\n</pre></div>\n<p>The CSS above would set the nav background color to <span class=\"geshifilter\"><code class=\"text geshifilter-text\">#aaa</code></span> and font color to\n<span class=\"geshifilter\"><code class=\"text geshifilter-text\">#fff</code></span>. And then, if the\nbrowser supports <span class=\"geshifilter\"><code class=\"text geshifilter-text\">text-shadow</code></span>, instead use a\nfont color of <span class=\"geshifilter\"><code class=\"text geshifilter-text\">#ccc</code></span> with a black text\nshadow. The use case would be that the text shadow provides some\nextra contrast; if text shadow is not available, use a font color\nwith greater contrast--in this case white on light gray.</p>\n<p>Older browsers that do not recognize <span class=\"geshifilter\"><code class=\"text geshifilter-text\">@supports</code></span> or do not support\n<span class=\"geshifilter\"><code class=\"text geshifilter-text\">text-shadow</code></span> will ignore the\n<span class=\"geshifilter\"><code class=\"text geshifilter-text\">@supports</code></span> section. It becomes\na great way to degrade gracefully without having to maintain and\nupdate browser-specific stylesheets. Gone would be the days of\nincluding files like <span class=\"geshifilter\"><code class=\"text geshifilter-text\">ie.css</code></span>.</p>\n<p>The other @-rule in the specification is<span class=\"geshifilter\"><code class=\"text geshifilter-text\">@document</code></span>. It allows you to\nspecify CSS rules that should only be applied to a certain set of\nURLs. Take the following examples:</p>\n<div class=\"geshifilter\">\n<pre class=\"css geshifilter-css\">\n<span class=\"coMULTI\">/* Apply styles to a domain */</span>\n<span class=\"co1\">@document domain(\"w3.org\") {/*...*/}</span>\n \n<span class=\"coMULTI\">/* Apply styles to a URL */</span>\n<span class=\"co1\">@document url(\"http://www.w3.org/Style/CSS/\") {/*...*/}</span>\n \n<span class=\"coMULTI\">/* Apply styles to URLs that begin with something */</span>\n<span class=\"co1\">@document url-prefix(\"http://www.w3.org/Style/CSS/\") {/*...*/}</span>\n \n<span class=\"coMULTI\">/* Apply styles to URLs that match a regular expression */</span>\n<span class=\"co1\">@document regexp(\"http://www.w3.org/TR/\\\\d{4}/[^/]*-CSS2-\\\\d{8}/\") {/*...*/}</span>\n</pre></div>\n<p>The idea is very interesting. But in most cases it is very bad\nin practice. We don't want styling to rely on our URL scheme or MVC\nroutes. That functionality should be logically separate. But I can\nsee it being useful in a small number of cases where you can't\ncontrol the HTML.</p>\n<p>Apparently this idea is not new at all. In 2004, Firefox began\nsupporting <span class=\"geshifilter\"><code class=\"text geshifilter-text\">@-moz-document</code></span> which is great\nfor user-defined spreadsheets (<a target=\"_blank\" href=\"http://lists.w3.org/Archives/Public/www-style/2004Aug/0135.html\">mailing\nlist post here</a>). For example, I can give reddit.com a whole new\nlook by adding a section to my browser default stylesheet. I did in\nfact get such CSS from <a target=\"_blank\" href=\"http://userstyles.org/styles/44492/dark-reddit-web-2-0-bemp-auto-width\">\nuserstyles.org</a>.</p>\n<p>I am excited about <span class=\"geshifilter\"><code class=\"text geshifilter-text\">@supports</code></span>. I see it helping\naccelerate adoption of new CSS features and helping futureproof\nagainst browser updates. I have mixed feelings about @document\nbecause it can be so easily abused. Abused in that a site ends up\nwith a spaghetti code of CSS that is tightly coupled with back-end\ncode.</p>",
    "timestamp": 1315461600000,
    "slug": "css-conditional-rules-exciting-and-scary",
    "nid": 94
}