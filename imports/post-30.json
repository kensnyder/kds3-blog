{
    "comments": [{
        "timestamp": 1279864800000,
        "by": "Anonymous",
        "text": "<p>I think under \"Switch to another database in a single session\n(e.g. USE database)\" you're not describing properly.</p>\n<p>When you specify a schema in MySQL, is really just a shortcut\nfor the queries.</p>\n<p>No matter what scheme you're using, you can specify other\nschemes in the various SQL statements, specifying\nschema_name.table.field as if it were a fully qualified name in\nJava.</p>\n<p>In fact, this feature has prevented me from migrating to\npostgresql</p>",
        "title": "MySQL\ncan use multiple schemas in SQL statements"
    }, {
        "timestamp": 1280210400000,
        "by": null,
        "text": "<p>I had never thought of fully qualified as the feature and USE as\nthe shortcut. That is a good point.</p>\n<p>And to clarify the Oracle problem: If you make two connections\nto Oracle, switching schemas on one switches it for both. Say I\nwant to connect to both my `cms` schema and `gelocation` schema on\nthe same Oracle server. Here is the scenario:</p>\n<p>1. Open new connection to `cms`<br/>\n2. Do some queries on connection 1<br/>\n3. Open new connection to `geolocation`<br/>\n4. Do some queries on connection 2<br/>\n5. Do some queries on connection 1</p>\n<p>Oops, connection 1 is now using the `geolocation` schema! It may\nhave to do with connection pooling something like that, but it is\nreally unexpected that something on one connection can affect\nsomething on the other.</p>",
        "title": "Multiple Schemas"
    }],
    "tags": ["sql", "web-dev"],
    "title": "I Love MySQL",
    "html": "<p>There are several things I love about MySQL compared to SQL\nServer and Oracle. Hopefully my memory is accurate on the SQL\nServer and Oracle support. I haven't used Oracle in a few months\nand SQL Server in two years.</p>\n<table class=\"compare\">\n<tbody>\n<tr>\n<th colspan=\"2\">Extended Inserts</th>\n</tr>\n<tr>\n<td class=\"dbrms\">MySQL 5</td>\n<td>Supported</td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>Not Supported</td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>Not Supported</td>\n</tr>\n<tr>\n<th colspan=\"2\">Linux/BSD support</th>\n</tr>\n<tr>\n<td>MySQL 5</td>\n<td>First class</td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>None</td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>First class</td>\n</tr>\n<tr>\n<th colspan=\"2\">Switch to another database in a single session\n(e.g. USE <span class=\"geshifilter\"><code class=\"text geshifilter-text\">database</code></span>)</th>\n</tr>\n<tr>\n<td>MySQL 5</td>\n<td>As expected: use database per connection</td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>As expected: use database per connection</td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>Schema changes for all connections in the same threads so you\nhave to call \"ALTER SESSION SET CURRENT_SCHEMA = <span class=\"geshifilter\"><code class=\"text geshifilter-text\">database</code></span>\" on before every\nquery to be sure (or use a global singleton property to track which\nschema is current and alter session when needed).</td>\n</tr>\n<tr>\n<th colspan=\"2\">LIMIT <span class=\"geshifilter\"><code class=\"text geshifilter-text\">max</code></span>, <span class=\"geshifilter\"><code class=\"text geshifilter-text\">offset</code></span></th>\n</tr>\n<tr>\n<td>MySQL 5</td>\n<td>Super useful</td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>\"SELECT TOP\" with nested queries for offset</td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>\"SELECT * FROM (SELECT ...) WHERE ROWNUM BETWEEN <span class=\"geshifilter\"><code class=\"text geshifilter-text\">lowest</code></span> AND <span class=\"geshifilter\"><code class=\"text geshifilter-text\">highest</code></span></td>\n</tr>\n<tr>\n<th colspan=\"2\">Updated row count</th>\n</tr>\n<tr>\n<td>MySQL 5</td>\n<td>Number of rows actually changed</td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>Number of rows matched in WHERE clause</td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>Number of rows matched in WHERE clause</td>\n</tr>\n<tr>\n<th colspan=\"2\">Unlimited size of results on limit clause</th>\n</tr>\n<tr>\n<td>MySQL 5</td>\n<td>SQL_CALC_FOUND_ROWS keyword</td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>follow-up query needed: SELECT COUNT(*) FROM (SELECT ...)</td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>follow-up query needed: SELECT COUNT(*) FROM (SELECT ...)</td>\n</tr>\n<tr>\n<th colspan=\"2\">Bitwise Operators</th>\n</tr>\n<tr>\n<td>MySQL 5</td>\n<td>Default 64-bit support</td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>No 64-bit support</td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>?</td>\n</tr>\n<tr>\n<th colspan=\"2\">Command line client</th>\n</tr>\n<tr>\n<td>MySQL 5</td>\n<td>Very usable (e.g. /g switch is very helpful)</td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>None. You're stuck with Windows GUI.</td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>SQL Plus. Clunky and minimal options</td>\n</tr>\n<tr>\n<th colspan=\"2\">GUI tools</th>\n</tr>\n<tr>\n<td>MySQL 5</td>\n<td>Lots of great open source tools (phpMyAdmin, MySQL AB, etc.\netc.)</td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>Free SQL client. Clob data viewer is clunky</td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>Free SQL Developer app. Third-party program needed to view Clob\ndata (I hear support is coming)</td>\n</tr>\n<tr>\n<th colspan=\"2\">Documentation and Support</th>\n</tr>\n<tr>\n<td>MySQL 5</td>\n<td>Comprehensive docs and comments online; online communities</td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>Buy a book</td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>Buy 2 books</td>\n</tr>\n<tr>\n<th colspan=\"2\">GROUP CONCAT keyword</th>\n</tr>\n<tr>\n<td>MySQL 5</td>\n<td>Supported</td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>Not Supported<br/>\n<strong>UPDATE:</strong> the \"FOR XML PATH\" construct <a href=\"http://kossovsky.net/index.php/2009/06/sql-2005-return-rows-as-delimited-column/\">\ncan help</a>:<br/>\nSELECT CustomerID AS 'data()'<br/>\nFROM Customer<br/>\nFOR XML PATH('')<br/></td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>Not Supported</td>\n</tr>\n<tr>\n<th colspan=\"2\">ON DUPLICATE KEY UPDATE</th>\n</tr>\n<tr>\n<td>MySQL 5</td>\n<td>Super useful</td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>IF EXISTS (...) BEGIN UPDATE ... SET ... END / IF NOT EXISTS\n(...) BEGIN INSERT (...) VALUES (...) END</td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>IF EXISTS (...) BEGIN UPDATE ... SET ... END / IF NOT EXISTS\n(...) BEGIN INSERT (...) VALUES (...) END</td>\n</tr>\n<tr>\n<th colspan=\"2\">Cost</th>\n</tr>\n<tr>\n<td>MySQL 5</td>\n<td>Free License</td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>Expensive</td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>Painfully Expensive</td>\n</tr>\n<tr>\n<th colspan=\"2\">Native Datetime Format</th>\n</tr>\n<tr>\n<td>MySQL 5</td>\n<td>Normal general-to-specific format (2005-07-15 11:30:52)</td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>Normal general-to-specific format (2005-07-15 11:30:52)</td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>Queries, updates, inserts default to chicago format \"15-JUL-05\n11.30.52.000000 AM\" so you need to set NLS_DATE_FORMAT or TO_CHAR\nfor other formats</td>\n</tr>\n<tr>\n<th colspan=\"2\">Date Subtraction/Manipulation</th>\n</tr>\n<tr>\n<td>MySQL 5</td>\n<td>SELECT TIMESTAMPDIFF(SECOND,'2009-07-01','2009-07-04 20:05:00')\n/ (24 * 60 * 60) as 'Days Between'</td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>?</td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>SELECT TO_DATE('2009-07-04 20:05:00','DD.MM.YYYY:HH24:MI:SS') -\nTO_DATE('2009-07-01','DD.MM.YYYY:HH24:MI:SS') as 'Days\nBetween'</td>\n</tr>\n<tr>\n<th colspan=\"2\">Programmatically reading schema (e.g. to alter\nschema)</th>\n</tr>\n<tr>\n<td>MySQL 5</td>\n<td>DESCRIBE <span class=\"geshifilter\"><code class=\"text geshifilter-text\">table_name</code></span></td>\n</tr>\n<tr>\n<td>SQL Server 2005</td>\n<td>Complex managerie of queries to various system tables</td>\n</tr>\n<tr>\n<td>Oracle 10g</td>\n<td>Painfully complex managerie of queries to various system\ntables</td>\n</tr>\n<tr>\n<td></td>\n</tr>\n</tbody>\n</table>\n<style type=\"text/css\">\n table.compare {         border-collapse: collapse;              width: 530px;           margin-left: 1px;       }       table.compare th, table.compare td {            font-size: 10px;                font-face: Verdana, Arial, Helvetica, sans-serif;               padding: 2px 5px;               border: 1px solid #aaa;         vertical-align: top;    }       table.compare th {              font-weight: bold;              vertical-align: bottom;         text-align: left;               font-size: 12px;                background-color: #eee; }       td.dbrms {              width: 110px;   }\n</style>\n<p>On the flip side, Oracle and SQL Server have much more robust\nbackup and clustering support.</p>",
    "timestamp": 1246514400000,
    "slug": "i-love-mysql",
    "nid": 30
}