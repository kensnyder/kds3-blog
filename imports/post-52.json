{
    "comments": [],
    "tags": ["html", "javascript", "php", "sql", "web-dev"],
    "title": "Escape Input and Output",
    "html": "<p>There is a surprising amount of confusion about XSS and SQL\ninjection among the PHP programmers I've worked with. Here are some\ncommon ways to do it right and to do it wrong.</p>\n<p>Escaping Input (protecting against SQL Injection):</p>\n<ul>\n<li>NO: add slashes or run mysql_real_escape_string() on everything\nin the REQUEST before using.</li>\n<li>YES: strip unexpected characters and validate data. If you need\na phone number, don't allow all types of symbols, for example.</li>\n<li>YES: use SQL binding before inserting database data. PDO offers\nsome nice binding. All PHP frameworks offer systems that\nautomatically bind data. At the least, use\nmysql_real_escape_string() or the correct one for your database\nengine.</li>\n</ul>\n<p>Escaping Output (protecting against XSS):</p>\n<ul>\n<li>NO: run strip_tags() on the way in. strip_tags() is not meant\nfor scrubbing input can let in malicious HTML. In fact, using\nstring_tags() is probably never what you need.</li>\n<li>NO: run html_entities() before anything comes into the\ndatabase. What if you need to write database data to a printed\ncheck? You don't want to accidently print \"O&amp;#39;Connor\" on\nsomeone's check.</li>\n<li>YES: use an HTML parser with whitelisting on any data coming in\nfrom a WYSIWYG (e.g. HTMLPurifier).</li>\n<li>YES: cast numbers to integers or floats.</li>\n<li>YES: use view helper functions to format dates, dollars and\nother data.</li>\n<li>YES: run html_entities() on all text, even if you \"know\" it is\nsafe. The view is autonomous and should assume all input has not\nyet been escaped.</li>\n<li>YES: Get familiar with <a href=\"http://ha.ckers.org/xss.html\" target=\"_blank\">ha.ckers.org research</a> and <a target=\"_blank\" href=\"http://www.owasp.org/index.php/Top_10_2007\">OWASP\nrecommendations</a>.</li>\n</ul>",
    "timestamp": 1269928800000,
    "slug": "escape-input-and-output",
    "nid": 52
}