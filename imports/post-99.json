{
    "comments": [],
    "tags": ["html", "php", "web-dev"],
    "title": "Before You Use Captcha: Form Protection Tips",
    "html": "<p>I ran into a great post on the PHP devnetwork forums <a target=\"_blank\" href=\"http://forums.devnetwork.net/viewtopic.php?f=19&amp;t=134037&amp;p=669713#p669711\">\nhere</a> talking about some tactics to protect your forms without\nusing Captcha.</p>\n<p>First is the Honeypot method. The idea is to add a field to the\nform that bots would likely fill out but that is a hidden element\non the form that should remain blank. twindev explains:</p>\n<blockquote>Honeypot - This generally stops bots that go to your\nsite auto submit the form. Add a field, called something like URL\n(something they would really want to fill in), style it so that it\nis not visible on the screen. Make sure for accessibility, you add\na label that says that the field should be left blank. Then on the\ncode that processes the form, if this field doesn't exist or it\ndoes but it isn't blank, don't accept the form\nsubmission</blockquote>\n<p>The second method that twindev suggests is Timeout. It gives\nforms an encrypted timestamp that requires the form be requested\nanew and submitted within a certain period of time. twindev\ndescribes it:</p>\n<blockquote>Time out - If someone writes a bot to just flat out\nPOST to your site, add a field in the form that is the current\ntimestamp. Then when the form is submitted, only accept it if it is\nwithin a certain period of time (say, an hour). The direct posting\nof data will only work for that much time. Now someone looking may\nrecognize the timestamp, so use a simple function to convert it to\nsomething very difficult, and then once submitted, convert it back\nto a number. (See <a target=\"_blank\" href=\"http://forums.devnetwork.net/viewtopic.php?f=1&amp;t=132062\">this\npost of mine</a> for my functions to do this)</blockquote>\n<p>It also occurred to me that checking that the timestamp is a\nlittle bit <em>old</em> would prevent bots from rapid-fire\nspamming. For example, require that the post be submitted at least\n20 seconds after being rendered. A person would take that long to\ncomplete the form, but a bot would have to wait.</p>",
    "timestamp": 1327302000000,
    "slug": "before-you-use-captcha-form-protection-tips",
    "nid": 99
}