{
    "comments": [],
    "tags": ["cakephp", "php"],
    "title": "CakePHP Containable Behavior Example",
    "html": "<p>Recently a client needed a long page with a lot of data. I found\nCakePHP's <a href=\"http://book.cakephp.org/view/1323/Containable\" target=\"_blank\">Containable Behavior</a> to be a quick and\neffective way to perform complex queries efficiently. Containable\nmakes queries efficient because you only join the tables you need\nand you only fetch the columns whose values you need.</p>\n<p>Below is an example that is similar to my code. Say you have a\nrequirement to put 10 blog posts on a page, complete with\nassociated slideshows and comments. Maybe it is a crazy web page or\nmaybe it is the result of an API call. Anyhow, imagine your blog\nposts have an author who has an avatar. Each post may have a\nslideshow with any number of images. Posts may have many of\ncomments and we want the comment text as well as the comment\nauthors' names, emails, and avatars.</p>\n<div class=\"geshifilter\">\n<pre class=\"php geshifilter-php\">\n<span class=\"co1\">// in /app/models/post.php</span>\n<span class=\"kw2\">class</span> Post <span class=\"kw2\">extends</span> AppModel <span class=\"br0\">{</span>\n  <span class=\"kw2\">public</span> <span class=\"re0\">$recursive</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>\n  <span class=\"kw2\">public</span> <span class=\"re0\">$actsAs</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st_h\">'Containable'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n  <span class=\"co1\">// ...</span>\n<span class=\"br0\">}</span>\n<span class=\"co1\">// in /app/controllers/posts_controller.php</span>\n<span class=\"kw2\">class</span> PostsController <span class=\"kw2\">extends</span> AppController <span class=\"br0\">{</span>\n  <span class=\"kw2\">public</span> <span class=\"kw2\">function</span> index<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\n    <span class=\"re0\">$this</span><span class=\"sy0\">-></span><span class=\"me1\">paginate</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span>\n      <span class=\"st_h\">'contain'</span> <span class=\"sy0\">=></span> <span class=\"kw3\">array</span><span class=\"br0\">(</span>\n        <span class=\"co1\">// we want to get the post author</span>\n        <span class=\"st_h\">'User'</span> <span class=\"sy0\">=></span> <span class=\"kw3\">array</span><span class=\"br0\">(</span>\n          <span class=\"co1\">// we just need his name and email</span>\n          <span class=\"st_h\">'fields'</span> <span class=\"sy0\">=></span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st_h\">'first_name'</span><span class=\"sy0\">,</span><span class=\"st_h\">'last_name'</span><span class=\"sy0\">,</span><span class=\"st_h\">'email'</span><span class=\"br0\">)</span>\n          <span class=\"co1\">// we also want to get his avatar image</span>\n          <span class=\"st_h\">'UserAvatar'</span> <span class=\"sy0\">=></span> <span class=\"kw3\">array</span><span class=\"br0\">(</span>\n            <span class=\"co1\">// we just need a few things from the user_avatars</span>\n            <span class=\"co1\">// table</span>\n            <span class=\"st_h\">'fields'</span> <span class=\"sy0\">=></span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st_h\">'url'</span><span class=\"sy0\">,</span><span class=\"st_h\">'width'</span><span class=\"sy0\">,</span><span class=\"st_h\">'height'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>\n          <span class=\"br0\">)</span><span class=\"sy0\">,</span>\n        <span class=\"br0\">)</span><span class=\"sy0\">,</span>\n        <span class=\"co1\">// each post could have a slideshow</span>\n        <span class=\"st_h\">'PostSlideshow'</span> <span class=\"sy0\">=></span> <span class=\"kw3\">array</span><span class=\"br0\">(</span>\n          <span class=\"co1\">// we just need the basics about the images</span>\n          <span class=\"st_h\">'fields'</span><span class=\"sy0\">=></span>array<span class=\"br0\">(</span><span class=\"st_h\">'caption'</span><span class=\"sy0\">,</span><span class=\"st_h\">'url'</span><span class=\"sy0\">,</span><span class=\"st_h\">'width'</span><span class=\"sy0\">,</span><span class=\"st_h\">'height'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>\n        <span class=\"br0\">)</span><span class=\"sy0\">,</span> \n        <span class=\"co1\">// we also want to get all comments for each post</span>\n        <span class=\"st_h\">'PostComment'</span> <span class=\"sy0\">=></span> <span class=\"kw3\">array</span><span class=\"br0\">(</span>\n          <span class=\"co1\">// we really only need the comment text and date</span>\n          <span class=\"st_h\">'fields'</span> <span class=\"sy0\">=></span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st_h\">'comment_text'</span><span class=\"sy0\">,</span><span class=\"st_h\">'created'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>\n          <span class=\"co1\">// but we also want to get the name and email of each</span>\n          <span class=\"co1\">// commenter</span>\n          <span class=\"st_h\">'User'</span> <span class=\"sy0\">=></span> <span class=\"kw3\">array</span><span class=\"br0\">(</span>\n            <span class=\"st_h\">'fields'</span> <span class=\"sy0\">=></span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st_h\">'first_name'</span><span class=\"sy0\">,</span><span class=\"st_h\">'last_name'</span><span class=\"sy0\">,</span><span class=\"st_h\">'email'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>\n            <span class=\"co1\">// and we also want to get the commenters' avatars</span>\n            <span class=\"st_h\">'UserAvatar'</span> <span class=\"sy0\">=></span> <span class=\"kw3\">array</span><span class=\"br0\">(</span>\n              <span class=\"st_h\">'fields'</span> <span class=\"sy0\">=></span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st_h\">'url'</span><span class=\"sy0\">,</span><span class=\"st_h\">'width'</span><span class=\"sy0\">,</span><span class=\"st_h\">'height'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>\n            <span class=\"br0\">)</span><span class=\"sy0\">,</span>            \n          <span class=\"br0\">)</span><span class=\"sy0\">,</span>\n        <span class=\"br0\">)</span><span class=\"sy0\">,</span>\n      <span class=\"br0\">)</span><span class=\"sy0\">,</span>\n      <span class=\"co1\">// we just need a few things about each post</span>\n      <span class=\"st_h\">'fields'</span> <span class=\"sy0\">=></span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st_h\">'headline'</span><span class=\"sy0\">,</span><span class=\"st_h\">'body'</span><span class=\"sy0\">,</span><span class=\"st_h\">'created'</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>\n      <span class=\"co1\">// only get posts that are published</span>\n      <span class=\"st_h\">'conditions'</span> <span class=\"sy0\">=></span> <span class=\"kw3\">array</span><span class=\"br0\">(</span>\n        <span class=\"st_h\">'Post.published'</span> <span class=\"sy0\">=></span> <span class=\"kw4\">true</span><span class=\"sy0\">,</span> \n      <span class=\"br0\">)</span><span class=\"sy0\">,</span>      \n      <span class=\"co1\">// show most recent first</span>\n      <span class=\"st_h\">'order'</span> <span class=\"sy0\">=></span> <span class=\"st_h\">'Post.created DESC'</span><span class=\"sy0\">,</span>\n      <span class=\"st_h\">'limit'</span> <span class=\"sy0\">=></span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span>\n    <span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"re0\">$posts</span> <span class=\"sy0\">=</span> <span class=\"re0\">$this</span><span class=\"sy0\">-></span><span class=\"me1\">paginate</span><span class=\"br0\">(</span><span class=\"st_h\">'Post'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"re0\">$this</span><span class=\"sy0\">-></span><span class=\"me1\">set</span><span class=\"br0\">(</span><span class=\"kw3\">compact</span><span class=\"br0\">(</span><span class=\"st_h\">'posts'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n  <span class=\"br0\">}</span>\n<span class=\"br0\">}</span>\n</pre></div>\n<p>CakePHP's containable behavior has been key to keep my app\nrunning quickly. CakePHP will run an efficient set of queries. In\nthe example above, it will query the `users` table once with a\nquery like `SELECT first_name, last_name, email FROM users WHERE id\nIN(1,2,3,4)`.</p>",
    "timestamp": 1312610400000,
    "slug": "cakephp-containable-behavior-example",
    "nid": 80
}